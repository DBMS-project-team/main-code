<!DOCTYPE html>
<html lang="en">

    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <meta name="description" content="Responsive Admin &amp; Dashboard Template based on Bootstrap 5">
        <meta name="author" content="AdminKit">
        <meta name="keywords" content="adminkit, bootstrap, bootstrap 5, admin, dashboard, template, responsive, css, sass, html, theme, front-end, ui kit, web">

        <link rel="shortcut icon" href="img/icons/icon-48x48.png" />
        
        <% var title = "Jupiter Apparels" %>
        <title><%= title %></title>

        <!-- jquery Ui CSS -->
        <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

        <!--Bootstrap 4.5 for modal-->
        <link
            rel="stylesheet"
            href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
            integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk"
            crossorigin="anonymous"
        />

        <!-- data table-->
        <!--link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/dt/jszip-2.5.0/dt-1.10.23/af-2.3.5/b-1.6.5/b-colvis-1.6.5/b-flash-1.6.5/b-html5-1.6.5/b-print-1.6.5/cr-1.5.3/fc-3.3.2/fh-3.1.7/kt-2.5.3/r-2.2.7/rg-1.1.2/rr-1.2.7/sc-2.0.3/sb-1.0.1/sp-1.2.2/sl-1.3.1/datatables.min.css"/-->
        
        <link href="css/app.css" rel="stylesheet">
        <link href="css/style.css" rel="stylesheet">
    </head>

    <body>
        <div class="wrapper">
            <%-include('common/sidebar', {menus}) %>
            <div class="main">
                <%-include('common/header'), {user} %>

                <main class="content">

<%#-include('common/toppart', {title: "Jupiter Apparels", nav_button: "dashboard", user}) %>
<%#-include('home') %>
                    <div id="modal-cont"></div>
                    <div id="root"></div>
                    
<%#-include('common/bottompart', { jsfile: "/js/dashboard.js" }) %>

                    </main>

                <%-include('common/footer') %>

            </div>
        </div>

        <!-- jquery-->
        <script src="https://code.jquery.com/jquery-3.5.1.js" integrity="sha256-QWo7LDvxbWT2tbbQ97B53yJnYU3WhH/C8ycbRAkjPDc=" crossorigin="anonymous"></script>

        <!-- Jquery ui -->
        <script src="https://code.jquery.com/ui/1.12.0/jquery-ui.js" integrity="sha256-0YPKAwZP7Mp3ALMRVB2i8GXeEndvCq3eSl/WsAl1Ryk=" crossorigin="anonymous" defer></script>

        <!-- data table-->
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
        <script type="text/javascript" src="https://cdn.datatables.net/v/dt/jszip-2.5.0/dt-1.10.23/af-2.3.5/b-1.6.5/b-colvis-1.6.5/b-flash-1.6.5/b-html5-1.6.5/b-print-1.6.5/cr-1.5.3/fc-3.3.2/fh-3.1.7/kt-2.5.3/r-2.2.7/rg-1.1.2/rr-1.2.7/sc-2.0.3/sb-1.0.1/sp-1.2.2/sl-1.3.1/datatables.min.js"></script>
        <script src="/js/datatables.js"></script>

        <script defer src="/js/app.js"></script>
        <script src="js/fullcalendar.js"></script>
        <!-- <%# if (typeof jsfile !='undefined' && jsfile) { %>
            <script src="<%#= jsfile %>"></script>
        <%# } %> -->
        <script src="https://unpkg.com/react@17/umd/react.development.js" crossorigin></script>
        <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js" crossorigin></script>
        <script src='https://unpkg.com/react-router-dom@5.0.0/umd/react-router-dom.min.js'></script>
        <script src='https://unpkg.com/babel-standalone@6.26.0/babel.js'></script>

        <!-- React bootstrap-->
        <script src="https://unpkg.com/react-bootstrap@next/dist/react-bootstrap.min.js" crossorigin></script>

        <!--Bootsrap switch-->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-switch/3.3.2/js/bootstrap-switch.min.js"></script>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-switch/3.3.2/css/bootstrap2/bootstrap-switch.min.css" />

        <script type='text/babel'>
            const Link = ReactRouterDOM.Link;
            const Route = ReactRouterDOM.Route;
            const Switch = ReactRouterDOM.Switch;
            const { useState, useEffect } = React;
            const {Button, Modal, Form} = ReactBootstrap;
    
            const App = () => (
            <ReactRouterDOM.HashRouter>
                <Switch>
                    <Route path="/" component={Home} />
                </Switch>
            </ReactRouterDOM.HashRouter>
            )
    
            const Home = ({location}) => {
                useEffect(()=>{
                    fetchPage();
                    if( document.querySelector('#root div').getElementsByTagName('script').length > 0 ){
                        for ( let sEle of document.querySelector('#root div').getElementsByTagName('script') ){
                            let s = document.createElement("script");
                            if( sEle.src !== '' ){
                                s.src = sEle.src;
                            }
                            s.innerHTML = sEle.innerHTML;
                            document.querySelector('#root').appendChild(s);
                        }
                        
                    }
                    after_pageload();
                });

                const [items, setItems] = useState([]);

                const fetchPage = async () => {
                    const items = await fetch('/pages'+location.pathname).then( data => data.text() ).then(text => {
                        //var html = new DOMParser().parseFromString(text, 'text/html');
                        //console.log( html.querySelectorAll('script')[0] );
                        return text;
                    });
                    setItems(items);
                };

                const refresh = () => {
                    // it re-renders the component
                    setItems({});
                }
                
                return (
                    <React.Fragment>
                        <div dangerouslySetInnerHTML={{__html: items}}/>
                        <input type="hidden" id="root_refresher" onClick={refresh} value="0"/>
                    </React.Fragment>
                );
            }
            const Login = () => <h1>Login</h1>
            const Register = () => <h1>Register</h1>

            function MyVerticallyCenteredModal(props) {
                const [show, setShow] = useState(false);
                const [value, setValue] = useState( [] );
                useEffect( _ => {
                    setValue( JSON.parse( props.value ) )
                }, [props.value])
                
                const handleClose = () => setShow(false);
                const handleShow = () => setShow(true);
                const handleSave = () => {
                    try {
                        var column = JSON.parse(props.column);
                        var id = JSON.parse(props.dataid);
                        console.log('in try')
                    } catch (e) {
                        var column = props.column;
                        var id = props.dataid;
                    }
                    console.log({value})
                    $.post( '/auth/alter/edit', {table: props.table, column, id,  value, changed_column: JSON.parse( props.db_column )}).always( _ => {
                        $('#root_refresher').click();
                    });
                    props.onHide();
                }
                const handleChange = (event) => {
                    console.log(event.target.value)
                    setValue(value.map( (ele, id) => {
                        if( (id+1)==event.target.id ){
                            return event.target.value
                        }else{
                            return ele
                        }
                    }));
                }
                return (
                    <Modal
                    {...props}
                    aria-labelledby="contained-modal-title-vcenter"
                    centered
                    >
                    <Modal.Header closeButton>
                        <Modal.Title id="contained-modal-title-vcenter">
                            Edit {props.title}
                        </Modal.Title>
                    </Modal.Header>
                    <Modal.Body>
                        <h4>Enter detail</h4>
                        
                        <Form>
                            {JSON.parse( props.field ).map( (ele, id) => (
                                <Form.Group key={id} controlId="formBasicEmail">
                                    <Form.Label>{ele.trim()}</Form.Label>
                                    <Form.Control type="text" placeholder="Enter" defaultValue={JSON.parse( props.value )[id]} id={id+1} onChange={handleChange} />
                                </Form.Group>
                            ))}
                        </Form>

                    </Modal.Body>
                    <Modal.Footer>
                        <Button onClick={props.onHide}>Close</Button>
                        <Button variant="primary" onClick={handleSave}>Save Changes</Button>
                    </Modal.Footer>
                    </Modal>
                );
                }

            function App2() {
                const [modalShow, setModalShow] = React.useState(false);
                const [datas, setDatas] = React.useState({table:'', column: '', dataid: '', value: '[]', title: '', field: '[]', db_column: '[]'});

                const handleClick = (e) => {
                    var ele = e.target;
                    setDatas({
                        table:ele.getAttribute('table'),
                        column: ele.getAttribute('column'),
                        dataid: ele.getAttribute('dataid'),
                        value: ele.getAttribute('value'),
                        title: ele.getAttribute('title'),
                        field: ele.getAttribute('field'),
                        db_column: ele.getAttribute('db_column')
                    });
                    setModalShow(true);
                }

                return (
                    <React.Fragment>
                        <Button variant="primary" onClick={handleClick} id="modal-btn"
                            style={{display:"none"}}
                            table={datas.table}
                            column={datas.column}
                            dataid={datas.dataid}
                            value={datas.value}
                            title={datas.title}
                            field={datas.field}
                            db_column={datas.db_column}>
                            modal
                        </Button>

                        <MyVerticallyCenteredModal
                            show={modalShow}
                            onHide={() => setModalShow(false)}
                            table={datas.table}
                            column={datas.column}
                            dataid={datas.dataid}
                            value={datas.value}
                            title={datas.title}
                            field={datas.field}
                            db_column={datas.db_column}
                        />
                    </React.Fragment>
                );
            }
            // const SidebarItem = ({menu}) => {
            //     return (
            //         <li className="sidebar-item">
            //         <a href={menu.child ? "#"+menu.href : menu.href} data-toggle={ menu.child ? "collapse" : '' } className={"sidebar-link" +  menu.child ? "collapsed" : "" }>
            //             <i className="align-middle" data-feather={ menu.icon }></i> <span className="align-middle">{ menu.title }</span>
            //         </a>
            //         {  menu.child &&
            //             <ul id={ menu.href } className="sidebar-dropdown list-unstyled collapse" data-parent="#sidebar">
            //                 {
            //                     menu.child.map((item, id)=> (
            //                         <li key={id} className="sidebar-item"><a className="sidebar-link" href={ item.href }>{ item.title }</a></li>
            //                     ))
            //                 }
            //             </ul>
            //         }
            //     </li>
            //     );
            // }
            // const SideBar = ({menus}) => {
            //     return (
            //         <React.Fragment>
            //         {menus.map((menu, id)=>(
            //             <SidebarItem key={id} menu={menu} />
            //         ))}
            //         </React.Fragment>
            //     )
            // }
            ReactDOM.render(<App />, document.querySelector('#root'));
            ReactDOM.render(<App2 />, document.querySelector('#modal-cont'));
            //ReactDOM.render(<SideBar menus={menus} />, document.querySelector('.sidebar-nav'));
        </script>
        <script>
            const after_pageload = _ => {
                $('.sidebar-item').removeClass('active');
                $(`a[aria-expanded='true']`).attr('aria-expanded', false)
                $(`a[href='${location.hash}]'`).addClass('active');
                $(`a[href='${location.hash}']`).parents('.sidebar-item').addClass('active');
                $(`a[href='${location.hash}']`).parents('.sidebar-item').children('a').attr('aria-expanded', true)
                $(`a[href='${location.hash}']`).parents('.sidebar-item').children('ul').addClass('show');
                const forms = $('#root form');
                forms.each( function() {
                    $(this).unbind('submit').submit(e=>{
                        form = $(this);
                        e.preventDefault();
                        var callback = (data)=>{
                            $('#root_refresher').click();
                        };
                        if(typeof form.attr('page_after_submit') !== 'undefined')callback = _=> {
                            location.hash = form.attr('page_after_submit');
                        };
                        else if(typeof form.attr('after_submit') !== 'undefined')callback = window[form.attr('after_submit')];
                        $.post( form.attr('action'), form.serializeArray()).done( callback ).fail(_ => {
                            $('#root_refresher').click();
                        });
                    })
                });
                
                if ( $.fn.dataTable.isDataTable( 'table[datatable=true]' ) ) {
                    table = $('table[datatable]').DataTable();
                }
                else {
                    table = $('table[datatable=true]').DataTable({
                        responsive: false,
				        lengthChange: !1,
                        buttons: ['copy', 'print', 'excel', 'pdf'],
                        displayLength: 10
                    });
                    table.buttons().container().appendTo(".dataTables_wrapper .col-md-6:eq(0)");
                }
                //table.buttons().container().appendTo('#datatable-buttons_wrapper .col-md-6:eq(0)');
                feather.replace();
                $('.del_ele').unbind('click').click(function(e){
                    e.preventDefault();
                    if( typeof $(this).parents('table').attr('del_fun') !== 'undefined' && $(this).parents('table').attr('del_fun') !== 'false' ){
                        window[$(this).parents('table').attr('del_fun')](this);
                    }else{
                        var table = $(this).parents('table').attr('db_table');
                        var column = $(this).parents('table').attr('db_primary_column');
                        var id = $(this).parents('tr').attr('data-id');
                        $.post( '/auth/alter/delete', {table, column, id}).done( _ => {
                            $('#root_refresher').click(); 
                        }).fail(_ => {
                            $('#root_refresher').click();
                        });
                    }
                });
                $('.edit_ele').unbind('click').click( function(e){
                    if( $(this).parents('table').attr('popup-edit') !== 'false' && typeof $(this).parents('table').attr('popup-edit') !== 'undefined' ){

                        var table = $(this).parents('table').attr('db_table');
                        var title = $(this).parents('.card').find('.card-header h3').html();
                        var column = $(this).parents('table').attr('db_primary_column');

                        if($(this).parents('table').attr('celledit')==undefined){
                            var dataid = $(this).parents('tr').attr('data-id');
                            
                            var column_ids = $(this).parents('table').attr('popup-edit').split(',').map( ele => ele.trim());
                            var db_column = JSON.stringify( column_ids.map( id => $(this).parents('table').find('thead').find('th').eq( id ).attr('db_column') ) );
                            var value = JSON.stringify( column_ids.map( id => $(this).parents('tr').children('td').eq( id ).html() ) );
                            var field = JSON.stringify( column_ids.map( id => $(this).parents('table').find('thead').find('th').eq( id ).html() ) );
                        }else{
                            var dataid = $(this).parents('td').attr('data-id');
                            var value = $(this).parents('td').text().trim();
                            var field = $(this).parents('table').attr('field');
                            var db_column = $(this).parents('table').attr('db_column');
                        }
                        
                        $('#modal-btn').attr({table, column, dataid, value, title, field, db_column});
                        $('#modal-btn').click();
                        e.preventDefault();
                    }else if ( $(this).parents('table').attr('edit-page') !== 'false' && typeof $(this).parents('table').attr('edit-page') !== 'undefined' ) {
                        var edit_page = $(this).parents('table').attr('edit-page');
                        location.hash = edit_page + ( /\/$/.test(edit_page)? '' : '/' ) + $(this).parents('tr').attr('data-id') + '/' + $(this).parents('tr').attr('show-name');
                        e.preventDefault();
                    }
                })
                // $('.sidebar-item').unbind('click').click(function(){
                //     $('.sidebar-item').removeClass('active');
                //     $(this).toggleClass('active');
                // })
            }

            console.log('%c Developed By CSE grp 13!', 'color: pink; font-weight: bold;background-color: black;font-size:20px; font-family: "Segoe UI",Arial,sans-serif; padding: 20px;');
        </script>

    </body>

</html>