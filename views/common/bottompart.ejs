                    </main>

                <%-include('footer') %>

            </div>
        </div>

        <script src="/js/app.js"></script>
        <script src="js/fullcalendar.js"></script>
        <!-- <%# if (typeof jsfile !='undefined' && jsfile) { %>
            <script src="<%#= jsfile %>"></script>
        <%# } %> -->
        <script src="https://unpkg.com/react@17/umd/react.development.js" crossorigin></script>
        <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js" crossorigin></script>
        <script src='https://unpkg.com/react-router-dom@5.0.0/umd/react-router-dom.min.js'></script>
        <script src='https://unpkg.com/babel-standalone@6.26.0/babel.js'></script>

        <script type='text/babel'>
            const Link = ReactRouterDOM.Link;
            const Route = ReactRouterDOM.Route;
            const Switch = ReactRouterDOM.Switch;
            const { useState, useEffect } = React;
    
            const App = () => (
            <ReactRouterDOM.HashRouter>
                <Switch>
                    <Route path="/" component={Home} />
                </Switch>
            </ReactRouterDOM.HashRouter>
            )
    
            const Home = ({location}) => {
                useEffect(()=>{
                    fetchPage();
                    if( document.querySelector('#root div').getElementsByTagName('script').length > 0 ){
                        for ( let sEle of document.querySelector('#root div').getElementsByTagName('script') ){
                            if( sEle.src !== '' ){
                                let s = document.createElement("script");
                                s.src = sEle.src;
                                document.querySelector('#root').appendChild(s);
                            }
                            sEle.innerHTML !== '' ? eval( sEle.innerHTML ) : '';
                        }
                        
                    }
                });

                const [items, setItems] = useState([]);

                const fetchPage = async () => {
                    const items = await fetch('/pages'+location.pathname).then( data => data.text() ).then(text => {
                        //var html = new DOMParser().parseFromString(text, 'text/html');
                        //console.log( html.querySelectorAll('script')[0] );
                        return text;
                    });
                    setItems(items);
                };
                
                return (
                    <div dangerouslySetInnerHTML={{__html: items}}>
                    </div>
                );
            }
            const Login = () => <h1>Login</h1>
            const Register = () => <h1>Register</h1>
    
            ReactDOM.render(<App />, document.querySelector('#root'));
        </script>

    </body>

</html>